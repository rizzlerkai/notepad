local _0x2 = game:GetService("UserInputService")
local _0x3 = game:GetService("Players")
local _0x4 = game:GetService("RunService")
local _0x5 = workspace.CurrentCamera
local _0x6 = _0x3.LocalPlayer
local _0x7 = _0x6:GetMouse()
local _0x8 = false
local _0x9 = false
local _0xa = nil

local function _0xb()
    _0x8 = not _0x8
    _0x9 = not _0x9
    if not _0x8 then
        if _0xa then
            _0xc(_0xa)
        end
        _0xa = nil
    end
end

local function _0xc(_0xd)
    if _0xd and _0xd.Character then
        local _0xe = _0xd.Character:FindFirstChild("HumanoidRootPart")
        if _0xe then
            _0xe.Size = Vector3.new(2, 2, 1)
            _0xe.CanCollide = false
            _0xe.Transparency = 1
        end
    end
end

local function _0xf()
    local _0x10 = nil
    local _0x11 = math.huge
    local _0x12 = _0x2:GetMouseLocation()
    for _, _0x13 in pairs(_0x3:GetPlayers()) do
        if _0x13 == _0x6 or not _0x13.Character then continue end
        local _0x14 = _0x13.Character:FindFirstChild("HumanoidRootPart")
        if _0x14 then
            local _0x15, _0x16 = _0x5:WorldToViewportPoint(_0x14.Position)
            if _0x16 then
                local _0x17 = (Vector2.new(_0x15.X, _0x15.Y) - _0x12).Magnitude
                if _0x17 < _0x11 then
                    _0x11 = _0x17
                    _0x10 = _0x13
                end
            end
        end
    end
    return _0x10
end

local function _0x18(_0x19)
    if not _0x19 or not _0x19.Character then return false end
    local _0x1a = _0x19.Character:FindFirstChild("HumanoidRootPart")
    if not _0x1a then return false end
    return true
end

local function _0x1b(_0x1c)
    return _0x1c and _0x1c.Parent:FindFirstChild('Humanoid') and
           (_0x1c.Name == 'Head' or _0x1c.Name == 'Torso' or
            _0x1c.Name == 'UpperTorso' or _0x1c.Name == 'HumanoidRootPart' or
            _0x1c.Name == 'LowerTorso' or _0x1c.Name == 'LeftArm' or _0x1c.Name == 'RightArm' or
            _0x1c.Name == 'LeftLeg' or _0x1c.Name == 'RightLeg')
end

local function _0x1d()
    if not _0x9 then return end
    local _0x1e = _0xf()
    if _0x1e and _0x18(_0x1e) then
        local _0x1f = _0x1e.Character:FindFirstChild("HumanoidRootPart")
        if _0x1f then
            local _0x20, _0x21 = _0x5:WorldToViewportPoint(_0x1f.Position)
            local _0x22 = _0x2:GetMouseLocation()
            local _0x23 = (Vector2.new(_0x20.X, _0x20.Y) - _0x22).Magnitude
            if _0x23 <= 100 then
                if _0x1b(_0x7.Target) then
                    mouse1click()
                end
            end
        end
    end
end

_0x4.RenderStepped:Connect(function()
    if not _0x8 or not _0x1.Fov.Enabled then return end
    local _0x24 = _0xf()
    if _0x24 and not _0x18(_0x24) then
        _0x24 = nil
    end
    if _0x24 and _0x24 ~= _0xa then
        if _0xa then
            _0xc(_0xa)
        end
        _0xa = _0x24
    end
    if _0xa and _0xa.Character then
        local _0x25 = _0xa.Character:FindFirstChild("HumanoidRootPart")
        if _0x25 then
            _0x25.Size = Vector3.new(_0x1.Fov.X, _0x1.Fov.Y, 1)
            _0x25.CanCollide = false
            _0x25.Transparency = 1
        end
    end
    if _0x9 then
        _0x1d()
    end
end)

_0x2.InputBegan:Connect(function(_0x26, _0x27)
    if _0x27 then return end
    if _0x26.KeyCode == _0x1.Keybind then
        _0xb()
    end
end)
